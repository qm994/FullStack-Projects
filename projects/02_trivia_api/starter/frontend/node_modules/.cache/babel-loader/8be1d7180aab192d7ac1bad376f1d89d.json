{"ast":null,"code":"var _jsxFileName = \"/Users/ma/Desktop/FSND/projects/02_trivia_api/starter/frontend/src/components/FormView.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props) {\n    super();\n\n    this.submitQuestion = event => {\n      event.preventDefault();\n\n      if (this.state.question == '' || this.state.answer == '') {\n        alert(\"Please fullfill the blanks firstly!\");\n      } else {\n        $.ajax({\n          url: '/questions',\n          //TODO: update request URL\n          type: \"POST\",\n          dataType: 'json',\n          contentType: 'application/json',\n          data: JSON.stringify({\n            question: this.state.question,\n            answer: this.state.answer,\n            difficulty: this.state.difficulty,\n            category: this.state.category\n          }),\n          xhrFields: {\n            withCredentials: true\n          },\n          crossDomain: true,\n          success: result => {\n            document.getElementById(\"add-question-form\").reset();\n            return;\n          },\n          error: error => {\n            alert('Unable to add question. Please try your request again');\n            return;\n          }\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      difficulty: 1,\n      category: 1,\n      categories: []\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: \"http://127.0.0.1:5000/categories_questions\",\n      //DONE: update request URL\n      type: \"GET\",\n      success: result => {\n        this.setState({\n          categories: result.categories\n        });\n        return;\n      },\n      error: error => {\n        alert('Unable to load categories. Please try your request again');\n        return;\n      }\n    });\n  }\n\n  render() {\n    console.log(this.state.categories);\n    return React.createElement(\"div\", {\n      id: \"add-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Add a New Trivia Question\"), React.createElement(\"form\", {\n      className: \"form-view\",\n      id: \"add-question-form\",\n      onSubmit: this.submitQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Question\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"question\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Answer\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"answer\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Difficulty\", React.createElement(\"select\", {\n      name: \"difficulty\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"option\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"5\"))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Category\", React.createElement(\"select\", {\n      name: \"category\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.categories.map(category => {\n      return React.createElement(\"option\", {\n        key: category[\"id\"],\n        value: category[\"type\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, category[\"type\"]);\n    }))), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FormView;","map":{"version":3,"sources":["/Users/ma/Desktop/FSND/projects/02_trivia_api/starter/frontend/src/components/FormView.js"],"names":["React","Component","$","FormView","constructor","props","submitQuestion","event","preventDefault","state","question","answer","alert","ajax","url","type","dataType","contentType","data","JSON","stringify","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","handleChange","setState","target","name","value","categories","componentDidMount","render","console","log","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\n\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      difficulty: 1,\n      category: 1,\n      categories: []\n    }\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: \"http://127.0.0.1:5000/categories_questions\", //DONE: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({ categories: result.categories })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load categories. Please try your request again')\n        return;\n      }\n    })\n  }\n\n\n  submitQuestion = (event) => {\n    event.preventDefault();\n    if (this.state.question == '' || this.state.answer == '') {\n      alert(\"Please fullfill the blanks firstly!\")\n    }\n    else {\n      $.ajax({\n        url: '/questions', //TODO: update request URL\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          question: this.state.question,\n          answer: this.state.answer,\n          difficulty: this.state.difficulty,\n          category: this.state.category\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: (result) => {\n          document.getElementById(\"add-question-form\").reset();\n          return;\n        },\n        error: (error) => {\n          alert('Unable to add question. Please try your request again')\n          return;\n        }\n      })\n    }\n\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  render() {\n    console.log(this.state.categories)\n    return (\n      <div id=\"add-form\">\n        <h2>Add a New Trivia Question</h2>\n        <form className=\"form-view\" id=\"add-question-form\" onSubmit={this.submitQuestion}>\n          <label>\n            Question\n            <input type=\"text\" name=\"question\" onChange={this.handleChange} />\n          </label>\n          <label>\n            Answer\n            <input type=\"text\" name=\"answer\" onChange={this.handleChange} />\n          </label>\n          <label>\n            Difficulty\n            <select name=\"difficulty\" onChange={this.handleChange}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n          </label>\n          <label>\n            Category\n            <select name=\"category\" onChange={this.handleChange}>\n              {(this.state.categories).map(category => {\n                return (\n                  <option key={category[\"id\"]} value={category[\"type\"]}>{category[\"type\"]}</option>\n                )\n              })}\n            </select>\n          </label>\n          <input type=\"submit\" className=\"button\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FormView;\n"]},"metadata":{},"sourceType":"module"}